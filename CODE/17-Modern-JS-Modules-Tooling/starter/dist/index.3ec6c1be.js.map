{"mappings":"AAAA,MAAM,MAAM,GAAG;IACb;QAAE,KAAK,EAAE,GAAG;QAAE,WAAW,EAAE,0BAAe;QAAE,IAAI,EAAE,OAAO;KAAE;IAC3D;QAAE,KAAK,EAAE,GAAG;QAAE,WAAW,EAAE,wBAAa;QAAE,IAAI,EAAE,OAAO;KAAE;IACzD;QAAE,KAAK,EAAE,IAAI;QAAE,WAAW,EAAE,0CAAoB;QAAE,IAAI,EAAE,OAAO;KAAE;IACjE;QAAE,KAAK,EAAE,GAAG;QAAE,WAAW,EAAE,uCAAiB;QAAE,IAAI,EAAE,OAAO;KAAE;IAC7D;QAAE,KAAK,EAAE,KAAK;QAAE,WAAW,EAAE,yBAAc;QAAE,IAAI,EAAE,OAAO;KAAE;IAC5D;QAAE,KAAK,EAAE,GAAG;QAAE,WAAW,EAAE,oBAAS;QAAE,IAAI,EAAE,SAAS;KAAE;IACvD;QAAE,KAAK,EAAE,IAAI;QAAE,WAAW,EAAE,mBAAQ;QAAE,IAAI,EAAE,SAAS;KAAE;IACvD;QAAE,KAAK,EAAE,KAAK;QAAE,WAAW,EAAE,yBAAc;QAAE,IAAI,EAAE,OAAO;KAAE;CAC7D,AAAC;AAEF,MAAM,MAAM,GAAG;IACb,KAAK,EAAE,IAAI;IACX,OAAO,EAAE,GAAG;CACb,AAAC;AAEF,MAAM,UAAU,GAAG,SAAU,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE;IACrD,IAAI,CAAC,IAAI,EAAE,IAAI,GAAG,OAAO,CAAC;IAC1B,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAE1B,MAAM,GAAG,AAAC;IACV,IAAI,MAAM,CAAC,IAAI,CAAC,EACd,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;SAEnB,GAAG,GAAG,CAAC,CAAC;IAGV,IAAI,KAAK,IAAI,GAAG,EACd,MAAM,CAAC,IAAI,CAAC;QAAE,KAAK,EAAE,CAAC,KAAK;QAAE,WAAW,EAAE,WAAW;QAAE,IAAI,EAAE,IAAI;KAAE,CAAC,CAAC;CAExE,AAAC;AACF,UAAU,CAAC,EAAE,EAAE,oBAAS,CAAC,CAAC;AAC1B,UAAU,CAAC,GAAG,EAAE,8BAAmB,EAAE,SAAS,CAAC,CAAC;AAChD,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAChC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAEpB,MAAM,KAAK,GAAG,WAAY;IACxB,KAAK,MAAM,EAAE,IAAI,MAAM,CAAE;QACvB,IAAI,GAAG,AAAC;QACR,IAAI,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EACjB,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;aAEtB,GAAG,GAAG,CAAC,CAAC;QAGV,IAAI,EAAE,CAAC,KAAK,GAAG,CAAC,GAAG,EACjB,EAAE,CAAC,IAAI,GAAG,OAAO,CAAC;KAErB;CACF,AAAC;AACF,KAAK,EAAE,CAAC;AAER,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAEpB,MAAM,WAAW,GAAG,SAAU,KAAK,EAAE;IACnC,MAAM,MAAM,GAAG,EAAE,AAAC;IAClB,KAAK,MAAM,EAAE,IAAI,MAAM,CACrB,IAAI,EAAE,CAAC,KAAK,IAAI,CAAC,KAAK,EACpB,MAAM,IAAI,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,qBAAqB;IAGrE,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,mBAAmB;IACjD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;CACrB,AAAC;AACF,WAAW,EAAE,CAAC","sources":["clean.js"],"sourcesContent":["const budget = [\n  { value: 250, description: 'Sold old TV üì∫', user: 'jonas' },\n  { value: -45, description: 'Groceries ü•ë', user: 'jonas' },\n  { value: 3500, description: 'Monthly salary üë©‚Äçüíª', user: 'jonas' },\n  { value: 300, description: 'Freelancing üë©‚Äçüíª', user: 'jonas' },\n  { value: -1100, description: 'New iPhone üì±', user: 'jonas' },\n  { value: -20, description: 'Candy üç≠', user: 'matilda' },\n  { value: -125, description: 'Toys üöÇ', user: 'matilda' },\n  { value: -1800, description: 'New Laptop üíª', user: 'jonas' },\n];\n\nconst limits = {\n  jonas: 1500,\n  matilda: 100,\n};\n\nconst addExpanse = function (value, description, user) {\n  if (!user) user = 'jonas';\n  user = user.toLowerCase();\n\n  const lim;\n  if (limits[user]) {\n    lim = limits[user];\n  } else {\n    lim = 0;\n  }\n\n  if (value <= lim) {\n    budget.push({ value: -value, description: description, user: user });\n  }\n};\naddExpanse(10, 'Pizza üçï');\naddExpanse(100, 'Going to movies üçø', 'Matilda');\naddExpanse(200, 'Stuff', 'Jay');\nconsole.log(budget);\n\nconst check = function () {\n  for (const el of budget) {\n    let lim;\n    if (limits[el.user]) {\n      lim = limits[el.user];\n    } else {\n      lim = 0;\n    }\n\n    if (el.value < -lim) {\n      el.flag = 'limit';\n    }\n  }\n};\ncheck();\n\nconsole.log(budget);\n\nconst bigExpenses = function (limit) {\n  const output = '';\n  for (const el of budget) {\n    if (el.value <= -limit) {\n      output += el.description.slice(-2) + ' / '; // Emojis are 2 chars\n    }\n  }\n  output = output.slice(0, -2); // Remove last '/ '\n  console.log(output);\n};\nbigExpenses();\n"],"names":[],"version":3,"file":"index.3ec6c1be.js.map","sourceRoot":"/__parcel_source_root/"}